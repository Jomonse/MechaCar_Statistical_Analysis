setwd("~/Bootcamp data analysis/R/MechaCar_Statistical_Analysis")
#import data set
mechaCar_table <- read.csv(file='demo.csv',check.names=F,stringsAsFactors = F)
#import data set
mechaCar_table <- read.csv(file='MechaCar_mpg.csv',check.names=F,stringsAsFactors = F)
library(dplyr)
mechaCar_table
lm(qsec~mpg, vehicle_length, vehicle_weight, spoiler_angle, ground_clreance, AWD)
lm(qsec~mechaCar_table)
#Using the dplyr package
library(dplyr)
#import data set
mechaCar_table <- read.csv(file='MechaCar_mpg.csv',check.names=F,stringsAsFactors = F)
#create linear model
lm(qsec~mechaCar_table)
?qsec
#create linear model
lm(mpg~mechaCar_table)
#create linear model
lm(qsec~mpg,mechaCar_table)
#create linear model
lm(AWD~mpg,mechaCar_table)
#create linear model
lm(mpg~AWD,mechaCar_table)
mechaCar_table
#create linear model
lm(mpg~AWD,mechaCar_table)
summary(lm(mpg~AWD,mechaCar_table))
summary(lm(AWD~mpg,mechaCar_table))
#create linear model
lm(AWD~mpg,mechaCar_table)
summary(lm(AWD~mpg,mechaCar_table))
#create linear model
lm(mpg~AWD,mechaCar_table)
summary(lm(mpg~AWD,mechaCar_table))
#create linear model
model <-lm(mpg~AWD,mechaCar_table)
summary(model)
#plot
yvals <- model$coefficients['AWD']*mechaCar_table$AWD + model$coefficients['(Intercept)']
plt <- ggplot(mechaCar_table,aes(x=AWD,y=mpg))
#Using the dplyr package
library(dplyr)
library(ggplot2)
#Using the dplyr package
library(dplyr)
library(ggplot2)
#import data set
mechaCar_table <- read.csv(file='MechaCar_mpg.csv',check.names=F,stringsAsFactors = F)
#create linear model
model <-lm(mpg~AWD,mechaCar_table)
model
summary(model)
#plot
yvals <- model$coefficients['AWD']*mechaCar_table$AWD + model$coefficients['(Intercept)']
plt <- ggplot(mechaCar_table,aes(x=AWD,y=mpg))
plt + geom_point() + geom_line(aes(y=yvals), color = "red")
#Using the dplyr package
library(dplyr)
library(ggplot2)
#import data set
mechaCar_table <- read.csv(file='MechaCar_mpg.csv',check.names=F,stringsAsFactors = F)
#create linear model
model <-lm(AWD~mpg,mechaCar_table)
model
summary(model)
#plot
yvals <- model$coefficients['mpg']*mechaCar_table$mpg + model$coefficients['(Intercept)']
plt <- ggplot(mechaCar_table,aes(x=mpg,y=AWD))
plt + geom_point() + geom_line(aes(y=yvals), color = "red")
plt + geom_point() + geom_line(aes(y=yvals), color = "green")
#create linear model
model <-lm(mpg,mechaCar_table)
#create linear model
model <-lm(mpg~ AWD + vehicle_length ,mechaCar_table)
#create linear model
model <-lm(mpg~ AWD + vehicle_length + vehicle_weight + spoiler_angle+
ground_clearance,mechaCar_table)
model
summary(model)
#plot
yvals <- model$coefficients['mpg']*mechaCar_table$mpg + model$coefficients['(Intercept)']
plt <- ggplot(mechaCar_table,aes(x=mpg,y=AWD))
plt + geom_point() + geom_line(aes(y=yvals), color = "green")
#Using the dplyr package
library(dplyr)
#import data set
mechaCar_table <- read.csv(file='MechaCar_mpg.csv',check.names=F,stringsAsFactors = F)
#create linear model
model <-lm(mpg~ AWD + vehicle_length + vehicle_weight + spoiler_angle+
ground_clearance,mechaCar_table)
model
#Obtain statistical metrics
summary(model)
#Test2
model2 <- lm(mechaCar_table$mpg~(mechaCar_table$AWD+
mechaCar_table$vehicle_length+
mechaCar_table$vehicle_weight+
mechaCar_table$spoiler_angle+
mechaCar_table$ground_clearance))
ANOVA <- aov(model2)
summary(ANOVA)
#Shapiro test
shapiro.test(rstandard(model2))
#Using the dplyr package
library(dplyr)
#import data set
mechaCar_table <- read.csv(file='MechaCar_mpg.csv',check.names=F,stringsAsFactors = F)
#create linear model
model <-lm(mpg~ AWD + vehicle_length + vehicle_weight + spoiler_angle+
ground_clearance,mechaCar_table)
model
#Obtain statistical metrics
summary(model)
#ANOVA Test
model2 <- lm(mechaCar_table$mpg~(mechaCar_table$AWD+
mechaCar_table$vehicle_length+
mechaCar_table$vehicle_weight+
mechaCar_table$spoiler_angle+
mechaCar_table$ground_clearance))
ANOVA <- aov(model2)
summary(ANOVA)
#Shapiro test
shapiro.test(rstandard(model2))
# Import data set
SusCoil_table <- read.csv(file='Suspension_Coil.csv',check.names=F,stringsAsFactors = F)
# Summarize
summary(SusCoil_table)
summary2
# Create summarize table
summary2  <- SusCoil_table %>% summarize(Mean=mean(PSI), Median=median(PSI),Variance=var(PSI),SD=sd(PSI))
summary2
View(summary2)
#create summary table with multiple columns
lot_summary <- SusCoil_table %>% group_by(Manufacturing_Lot) %>% summarize(Mean=mean(PSI), Median=median(PSI),Variance=var(PSI),SD=sd(PSI), .groups = 'keep')
lot_summary
View(lot_summary)
View(lot_summary)
# Hipotesis:the PSI across all manufacturing lots is statistically
#different from the population mean of 1,500 pounds per square inch
t.test(SuspensionCoil_Table$PSI,mu=1500)
#Set the data
MLot1 <- subset(SuspensionCoil_Table, Manufacturing_Lot=='Lot1')
# Hipotesis:the PSI across all manufacturing lots is statistically
#different from the population mean of 1,500 pounds per square inch
t.test(SusCoil_table$PSI,mu=1500)
#Set the data
MLot1 <- subset(SuspensionCoil_Table, Manufacturing_Lot=='Lot1')
MLot2 <- subset(SuspensionCoil_Table, Manufacturing_Lot=='Lot2')
# Hipotesis:the PSI across all manufacturing lots is statistically
#different from the population mean of 1,500 pounds per square inch
t.test(SusCoil_table$PSI,mu=1500)
#Set the data
MLot1 <- subset(SusCoil_table, Manufacturing_Lot=='Lot1')
MLot2 <- subset(SusCoil_table, Manufacturing_Lot=='Lot2')
MLot3 <- subset(SusCoil_table, Manufacturing_Lot=='Lot3')
#Test
t.test(MLot1$PSI,mu=1500)
t.test(MLot2$PSI,mu=1500)
t.test(MLot3$PSI,mu=1500)
